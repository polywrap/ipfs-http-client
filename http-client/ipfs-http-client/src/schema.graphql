#import { Module, Request, Response, ResponseType } into Http from "wrap://ens/wrappers.polywrap.eth:http@1.1.0"

type Module {
  cat(
    cid: String!
    ipfsProvider: String!
    timeout: UInt32
    catOptions: CatOptions
  ): Bytes!

  resolve(
    cid: String!
    ipfsProvider: String!
    timeout: UInt32
    resolveOptions: ResolveOptions
  ): ResolveResult!

  addFile(
    data: FileEntry!
    ipfsProvider: String!
    timeout: UInt32
    addOptions: AddOptions
  ): AddResult!

  addDir(
    data: DirectoryEntry!
    ipfsProvider: String!
    timeout: UInt32
    addOptions: AddOptions
  ): [AddResult!]!

  addBlob(
    data: Blob!
    ipfsProvider: String!
    timeout: UInt32
    addOptions: AddOptions
  ): [AddResult!]!
}

type CatOptions {
  offset: Int32
  length: Int32
}

type AddOptions {
  pin: Boolean
  onlyHash: Boolean
  wrapWithDirectory: Boolean
}

type ResolveOptions {
  recursive: Boolean
  dhtRecordCount: Int32
  dhtTimeout: String
}

type ResolveResult {
  cid: String!
  provider: String!
}

type AddResult {
  name: String!
  hash: String!
  size: String!
}

type FileEntry {
  name: String!
  data: Bytes!
}

type DirectoryEntry {
  name: String!
  directories: [DirectoryEntry!]
  files: [FileEntry!]
}

type Blob {
  directories: [DirectoryEntry!]
  files: [FileEntry!]
}

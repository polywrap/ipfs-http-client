"""
This type stub file was generated by pyright.
"""

import base64
import json
from pathlib import Path
from typing import List, Optional, TypedDict, Union, cast
from enum import Enum
from httpx import AsyncClient, Response
from polywrap_plugin import PluginModule, PluginPackage
from polywrap_core import Invoker
from polywrap_result import Ok, Result
from polywrap_manifest import WrapManifest
from polywrap_msgpack.generic_map import GenericMap

class HttpResponseType(Enum):
    TEXT = ...
    BINARY = ...


class FormDataEntry(TypedDict):
    name: str
    value: Optional[str]
    fileName: Optional[str]
    type: Optional[str]
    ...


class HttpRequest(TypedDict):
    headers: Optional[GenericMap[str, str]]
    urlParams: Optional[GenericMap[str, str]]
    responseType: Union[HttpResponseType, str, int]
    body: Optional[str]
    formData: Optional[List[FormDataEntry]]
    timeout: Optional[int]
    ...


class HttpResponse(TypedDict):
    status: int
    statusText: str
    headers: Optional[GenericMap[str, str]]
    body: Optional[str]
    ...


class ArgsGet(TypedDict):
    url: str
    request: Optional[HttpRequest]
    ...


class ArgsPost(TypedDict):
    url: str
    request: Optional[HttpRequest]
    ...


def isResponseBinary(args: ArgsGet) -> bool:
    ...

class HttpPlugin(PluginModule[None]):
    def __init__(self) -> None:
        ...
    
    async def get(self, args: ArgsGet, invoker: Invoker) -> Result[HttpResponse]:
        ...
    
    async def post(self, args: ArgsPost, invoker: Invoker) -> Result[HttpResponse]:
        ...
    


def http_plugin() -> PluginPackage[None]: # -> PluginPackage[None]:
    ...

